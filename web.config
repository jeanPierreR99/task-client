<configuration>
  <system.webServer>

    <caching enabled="false" />
    
    <rewrite>
      <rules>

        <!-- Regla para proxy inverso hacia backend en puerto 3000 para /uploads -->
        <rule name="ReverseProxyUploads" stopProcessing="true">
          <match url="^uploads/(.*)" />
          <action type="Rewrite" url="http://localhost:3000/uploads/{R:1}" />
        </rule>

        <!-- Regla para proxy inverso hacia backend en puerto 3000 para API -->
        <rule name="ReverseProxyToNode" stopProcessing="true">
          <match url="^api/v1/(.*)" />
          <conditions logicalGrouping="MatchAll">
            <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="true" />
            <add input="{REQUEST_FILENAME}" matchType="IsDirectory" negate="true" />
          </conditions>
          <action type="Rewrite" url="http://localhost:3000/{R:0}" />
        </rule>

        <!-- Regla para proxy inverso hacia backend en puerto 3000 para Socket.IO -->
        <rule name="ReverseProxySocketIO" stopProcessing="true">
          <match url="^socket.io/(.*)" />
          <action type="Rewrite" url="http://localhost:3000/socket.io/{R:1}" />
        </rule>

        <!-- Regla para React Routes (SPA), excluyendo /uploads, /api/v1 y /socket.io -->
        <rule name="ReactRoutes" stopProcessing="true">
          <match url="^(?!uploads/|api/v1/|socket.io/).*$" />
          <conditions logicalGrouping="MatchAll">
            <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="true" />
            <add input="{REQUEST_FILENAME}" matchType="IsDirectory" negate="true" />
          </conditions>
          <action type="Rewrite" url="/index.html" />
        </rule>

      </rules>
    </rewrite>
    <staticContent>
      <mimeMap fileExtension=".webmanifest" mimeType="application/manifest+json" />
    </staticContent>
  </system.webServer>
</configuration>